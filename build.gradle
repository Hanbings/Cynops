task collect(type: Copy) {
    destinationDir = file('build/libs')
    subprojects.each { project ->
        from project.file('build/libs')
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    repositories {
        mavenCentral()
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        archiveClassifier.convention('sources')
        archiveClassifier.set('sources')
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier.convention('javadocs')
        archiveClassifier.set('javadocs')
    }

    javadoc {
        options.addBooleanOption('html5', true)
        options.encoding('utf-8')
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }

    test {
        useJUnitPlatform()
    }


    publishing {
        repositories {
            maven {
                url = uri(project.findProperty("repository_root_url") ?: System.getenv("REPOSITORY_ROOT_URL")
                        + (project.version.toString().endsWith('dev') ? 'snapshots' : 'releases'))
                credentials {
                    username = project.findProperty("repository_user") ?: System.getenv("REPOSITORY_USER")
                    password = project.findProperty("repository_token") ?: System.getenv("REPOSITORY_TOKEN")
                }
            }
        }
        publications {
            mavenJava(MavenPublication) {
                artifact(jar)
                artifact(sourcesJar)
                artifact(javadocJar)
            }
        }
    }
}